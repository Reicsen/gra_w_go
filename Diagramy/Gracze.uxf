<diagram program="umletino" version="15.1"><zoom_level>10</zoom_level><help_text>Space for diagram notes</help_text><element><id>UMLActor</id><coordinates><x>210</x><y>180</y><w>60</w><h>110</h></coordinates><panel_attributes>Gracz</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLUseCase</id><coordinates><x>280</x><y>70</y><w>120</w><h>40</h></coordinates><panel_attributes>Graj z botem</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLUseCase</id><coordinates><x>360</x><y>180</y><w>160</w><h>70</h></coordinates><panel_attributes>Graj a innym graczem</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>270</x><y>180</y><w>90</w><h>40</h></coordinates><panel_attributes></panel_attributes><additional_attributes>10;20;70;20</additional_attributes></element><element><id>Relation</id><coordinates><x>240</x><y>110</y><w>80</w><h>80</h></coordinates><panel_attributes></panel_attributes><additional_attributes>10;60;60;10</additional_attributes></element><element><id>UMLActor</id><coordinates><x>200</x><y>490</y><w>60</w><h>110</h></coordinates><panel_attributes>Gracz</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLActor</id><coordinates><x>200</x><y>360</y><w>60</w><h>110</h></coordinates><panel_attributes>Bot</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>230</x><y>390</y><w>170</w><h>140</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>150;120;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>240</x><y>530</y><w>160</w><h>30</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>140;10;10;10</additional_attributes></element><element><id>UMLActor</id><coordinates><x>370</x><y>500</y><w>60</w><h>110</h></coordinates><panel_attributes>Klient</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>400</x><y>420</y><w>180</w><h>100</h></coordinates><panel_attributes></panel_attributes><additional_attributes>10;80;160;10</additional_attributes></element><element><id>UMLUseCase</id><coordinates><x>520</x><y>390</y><w>120</w><h>40</h></coordinates><panel_attributes>Wykonanie ruchu</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLUseCase</id><coordinates><x>520</x><y>500</y><w>120</w><h>40</h></coordinates><panel_attributes>Poddanie się </panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLUseCase</id><coordinates><x>520</x><y>600</y><w>120</w><h>40</h></coordinates><panel_attributes>Pominięcie ruchu</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>410</x><y>560</y><w>140</w><h>70</h></coordinates><panel_attributes></panel_attributes><additional_attributes>10;10;120;50</additional_attributes></element><element><id>Relation</id><coordinates><x>420</x><y>500</y><w>120</w><h>40</h></coordinates><panel_attributes></panel_attributes><additional_attributes>10;20;100;20</additional_attributes></element><element><id>UMLClass</id><coordinates><x>940</x><y>140</y><w>160</w><h>220</h></coordinates><panel_attributes>PU01
--
Aktorzy
--
Warunki wstępne

--
Przepływ główny



--
Warunki końcowe</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1100</x><y>140</y><w>270</w><h>220</h></coordinates><panel_attributes>Poddanie się
--
Klient
--
-gra trwa
-jest obecnie aktywnym graczem
--
1. Aktor naciska przycisk ,,Poddaj się"
2. System wysyła do serwera sygnał
3. Serwer wysyła do obu graczy sygnały
    o końcu gry i rezultacie
--
Gra się kończy, na ekranie zostaje
wyświetlone powiadomienie o porażce,
a u drugiego gracza - o zwycięstwie.</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>940</x><y>380</y><w>160</w><h>340</h></coordinates><panel_attributes>PU02
--
Aktorzy
--
Warunki wstępne

--
Przepływ główny







--
Przepływy alternatywne


--
Warunki końcowe</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1100</x><y>380</y><w>270</w><h>340</h></coordinates><panel_attributes>Pominięcie ruchu
--
Klient
--
-gra trwa
-jest obecnie aktywnym graczem
--
1. Aktor naciska przycisk ,,Pomiń ruch"
2. System wysyła do serwera sygnał
    i zmienia swój status aktywności
3.Serwer sprawdza czy drugi gracz w ostatnim
    ruchu też pominął turę
4. Jeśli nie, serwer wysyła do drugiego gracza
    sygnał o początku jego tury (co powoduje
    zmianę jego statusu aktywności)
--
I
4. Jeśli nie, serwer wysyła do drugiego gracza
    sygnał o początku negocjacji
--
-dla przepływu gł. - gracz staje się nieaktywny,
  a drugi gracz staje się aktywny (zaczyna się
  jego tura)
-dla I - rozpoczynają się negocjacje (pierwszy
  wybiera drugi gracz)</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>940</x><y>800</y><w>160</w><h>360</h></coordinates><panel_attributes>PU03
--
Aktorzy
--
Warunki wstępne

--
Przepływ główny







--
Przepływy alternatywne



--
Warunki końcowe


--
Wyjątki</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1100</x><y>800</y><w>440</w><h>360</h></coordinates><panel_attributes>Wykonanie ruchu
--
Klient
--
-gra trwa
-jest obecnie aktywnym graczem
--
1. Aktor naciska miejsce na planszy, w którym chce postawić pionek
2. System wysyła do serwera sygnały (o próbie ruchu i numerze pola)
3. Serwer zwraca sygnał o powodzeniu ruchu
4. System dodaje pionek na planszy graficznej i zmienia status aktywności
5. Serwer wysyła do drugiego gracza sygnały (o ruchu przeciwnika
    i numerze pola)
6. Drugi gracz dodaje pionek na planszy graficznej i zmienia status
    aktywności
--
I ruch jest niepoprawny
3. Serwer zwraca sygnał o niepowodzeniu ruchu
4. System wyświetla na planszy powiadomienie o błędnym ruchu i czeka
     na nowy ruch aktora
--
-dla przepływu gł. - zmiany na obu planszach graficznych; gracz staje się
 nieaktywny, a drugi gracz staje się aktywny (zaczyna się jego tura)
-dla I - system czeka na nowe działanie aktora
--
-ruch jest niepoprawny (przy przejściu z 2. do 3.) - serwer zwraca sygnał o
 niepowodzeniu i system czeka na nowe działanie aktora</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLUseCase</id><coordinates><x>330</x><y>280</y><w>120</w><h>40</h></coordinates><panel_attributes>Odtworzenie gry</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>260</x><y>240</y><w>90</w><h>60</h></coordinates><panel_attributes></panel_attributes><additional_attributes>10;10;70;40</additional_attributes></element><element><id>UMLActor</id><coordinates><x>180</x><y>620</y><w>100</w><h>110</h></coordinates><panel_attributes>Odtwarzanie</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>240</x><y>560</y><w>160</w><h>120</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>140;10;10;100</additional_attributes></element></diagram>