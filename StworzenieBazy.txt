CREATE DATABASE gra_w_go;

CONNECT gra_w_go;

CREATE TABLE Gry(
id int NOT NULL AUTO_INCREMENT,
PRIMARY KEY(id),
wygrany ENUM('czarny','bialy') NOT NULL
);
ALTER TABLE Gry AUTO_INCREMENT=1;

CREATE TABLE Ruchy(
id int NOT NULL AUTO_INCREMENT,
PRIMARY KEY(id),
id_gry int NOT NULL,
FOREIGN KEY (id_gry)
 REFERENCES Gry(id)
 ON DELETE CASCADE ON UPDATE CASCADE,
gracz int NOT NULL,
pole int NOT NULL
);
ALTER TABLE Ruchy AUTO_INCREMENT=1;

DELIMITER #
CREATE PROCEDURE start()
BEGIN
 SET @str="INSERT INTO Gry(wygrany) VALUES(?);";
 PREPARE dodaj_gre FROM @str;

 SET @str="INSERT INTO Ruchy(id_gry,gracz,pole) VALUES(?,?,?);";
 PREPARE dodaj_ruch FROM @str;

 SET @str="SELECT MAX(id) FROM Gry;";
 PREPARE wez_id_gry FROM @str;

 SET @str="SELECT gracz, pole FROM Ruchy WHERE id_gry=?;";
 PREPARE lista_ruchow FROM @str;

 SET @str="SELECT * FROM Gry ORDER BY id ASC LIMIT 50;";
 PREPARE lista_gier FROM @str;

 SET @str="SELECT COUNT(id) FROM Gry;";
 PREPARE ilosc_gier FROM @str;

 SET @str="DELETE FROM Gry WHERE id=?;";
 PREPARE delete1 FROM @str;
END#
DELIMITER ;

DELIMITER #
CREATE TRIGGER aktualizacja AFTER DELETE ON Gry
FOR EACH ROW
BEGIN
 DELETE FROM Ruchy WHERE Ruchy.id_gry=OLD.id;
END#
DELIMITER ;

CREATE USER 'user'@'localhost';
GRANT Select, Insert, Alter, Execute ON *.* TO 'user'@'localhost';
FLUSH PRIVILEGES;